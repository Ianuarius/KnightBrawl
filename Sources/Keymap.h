/**
 * Keymap.h
 *
 */

#ifndef __KEYMAP_H_DEFINED__
#define __KEYMAP_H_DEFINED__

#include <string>
#include <map>
#include "SDL.h"

using namespace std;

template <typename T> class EnumParser
{
    map<string, T> enumMap;
public:
    EnumParser(){};

    T ParseSomeEnum(const string &value)
    { 
        typename map <string, T>::const_iterator iValue = enumMap.find(value);
        if (iValue  == enumMap.end())
            throw runtime_error("");
        return iValue->second;
    }
};

EnumParser<SDL_Scancode>::EnumParser()
{
    enumMap["UNKNOWN"] = SDL_SCANCODE_UNKNOWN;
	enumMap["A"] = SDL_SCANCODE_A;
	enumMap["B"] = SDL_SCANCODE_B;
	enumMap["C"] = SDL_SCANCODE_C;
	enumMap["D"] = SDL_SCANCODE_D;
	enumMap["E"] = SDL_SCANCODE_E;
	enumMap["F"] = SDL_SCANCODE_F;
	enumMap["G"] = SDL_SCANCODE_G;
	enumMap["H"] = SDL_SCANCODE_H;
	enumMap["I"] = SDL_SCANCODE_I;
	enumMap["J"] = SDL_SCANCODE_J;
	enumMap["K"] = SDL_SCANCODE_K;
	enumMap["L"] = SDL_SCANCODE_L;
	enumMap["M"] = SDL_SCANCODE_M;
	enumMap["N"] = SDL_SCANCODE_N;
	enumMap["O"] = SDL_SCANCODE_O;
	enumMap["P"] = SDL_SCANCODE_P;
	enumMap["Q"] = SDL_SCANCODE_Q;
	enumMap["R"] = SDL_SCANCODE_R;
	enumMap["S"] = SDL_SCANCODE_S;
	enumMap["T"] = SDL_SCANCODE_T;
	enumMap["U"] = SDL_SCANCODE_U;
	enumMap["V"] = SDL_SCANCODE_V;
	enumMap["W"] = SDL_SCANCODE_W;
	enumMap["X"] = SDL_SCANCODE_X;
	enumMap["Y"] = SDL_SCANCODE_Y;
	enumMap["Z"] = SDL_SCANCODE_Z;
	enumMap["1"] = SDL_SCANCODE_1;
	enumMap["2"] = SDL_SCANCODE_2;
	enumMap["3"] = SDL_SCANCODE_3;
	enumMap["4"] = SDL_SCANCODE_4;
	enumMap["5"] = SDL_SCANCODE_5;
	enumMap["6"] = SDL_SCANCODE_6;
	enumMap["7"] = SDL_SCANCODE_7;
	enumMap["8"] = SDL_SCANCODE_8;
	enumMap["9"] = SDL_SCANCODE_9;
	enumMap["0"] = SDL_SCANCODE_0;
	enumMap["RETURN"] = SDL_SCANCODE_RETURN;
	enumMap["ESCAPE"] = SDL_SCANCODE_ESCAPE;
	enumMap["BACKSPACE"] = SDL_SCANCODE_BACKSPACE;
	enumMap["TAB"] = SDL_SCANCODE_TAB;
	enumMap["SPACE"] = SDL_SCANCODE_SPACE;
	enumMap["MINUS"] = SDL_SCANCODE_MINUS;
	enumMap["EQUALS"] = SDL_SCANCODE_EQUALS;
	enumMap["LEFTBRACKET"] = SDL_SCANCODE_LEFTBRACKET;
	enumMap["RIGHTBRACKET"] = SDL_SCANCODE_RIGHTBRACKET;
	enumMap["BACKSLASH"] = SDL_SCANCODE_BACKSLASH;
	enumMap["NONUSHASH"] = SDL_SCANCODE_NONUSHASH;
	enumMap["SEMICOLON"] = SDL_SCANCODE_SEMICOLON;
	enumMap["APOSTROPHE"] = SDL_SCANCODE_APOSTROPHE;
	enumMap["GRAVE"] = SDL_SCANCODE_GRAVE;
	enumMap["COMMA"] = SDL_SCANCODE_COMMA;
	enumMap["PERIOD"] = SDL_SCANCODE_PERIOD;
	enumMap["SLASH"] = SDL_SCANCODE_SLASH;
	enumMap["CAPSLOCK"] = SDL_SCANCODE_CAPSLOCK;
	enumMap["F1"] = SDL_SCANCODE_F1;
	enumMap["F2"] = SDL_SCANCODE_F2;
	enumMap["F3"] = SDL_SCANCODE_F3;
	enumMap["F4"] = SDL_SCANCODE_F4;
	enumMap["F5"] = SDL_SCANCODE_F5;
	enumMap["F6"] = SDL_SCANCODE_F6;
	enumMap["F7"] = SDL_SCANCODE_F7;
	enumMap["F8"] = SDL_SCANCODE_F8;
	enumMap["F9"] = SDL_SCANCODE_F9;
	enumMap["F10"] = SDL_SCANCODE_F10;
	enumMap["F11"] = SDL_SCANCODE_F11;
	enumMap["F12"] = SDL_SCANCODE_F12;
	enumMap["PRINTSCREEN"] = SDL_SCANCODE_PRINTSCREEN;
	enumMap["SCROLLLOCK"] = SDL_SCANCODE_SCROLLLOCK;
	enumMap["PAUSE"] = SDL_SCANCODE_PAUSE;
	enumMap["INSERT"] = SDL_SCANCODE_INSERT;
	enumMap["HOME"] = SDL_SCANCODE_HOME;
	enumMap["PAGEUP"] = SDL_SCANCODE_PAGEUP;
	enumMap["DELETE"] = SDL_SCANCODE_DELETE;
	enumMap["END"] = SDL_SCANCODE_END;
	enumMap["PAGEDOWN"] = SDL_SCANCODE_PAGEDOWN;
	enumMap["RIGHT"] = SDL_SCANCODE_RIGHT;
	enumMap["LEFT"] = SDL_SCANCODE_LEFT;
	enumMap["DOWN"] = SDL_SCANCODE_DOWN;
	enumMap["UP"] = SDL_SCANCODE_UP;
	enumMap["NUMLOCKCLEAR"] = SDL_SCANCODE_NUMLOCKCLEAR;
	enumMap["KP_DIVIDE"] = SDL_SCANCODE_KP_DIVIDE;
	enumMap["KP_MULTIPLY"] = SDL_SCANCODE_KP_MULTIPLY;
	enumMap["KP_MINUS"] = SDL_SCANCODE_KP_MINUS;
	enumMap["KP_PLUS"] = SDL_SCANCODE_KP_PLUS;
	enumMap["KP_ENTER"] = SDL_SCANCODE_KP_ENTER;
	enumMap["KP_1"] = SDL_SCANCODE_KP_1;
	enumMap["KP_2"] = SDL_SCANCODE_KP_2;
	enumMap["KP_3"] = SDL_SCANCODE_KP_3;
	enumMap["KP_4"] = SDL_SCANCODE_KP_4;
	enumMap["KP_5"] = SDL_SCANCODE_KP_5;
	enumMap["KP_6"] = SDL_SCANCODE_KP_6;
	enumMap["KP_7"] = SDL_SCANCODE_KP_7;
	enumMap["KP_8"] = SDL_SCANCODE_KP_8;
	enumMap["KP_9"] = SDL_SCANCODE_KP_9;
	enumMap["KP_0"] = SDL_SCANCODE_KP_0;
	enumMap["KP_PERIOD"] = SDL_SCANCODE_KP_PERIOD;
	enumMap["NONUSBACKSLASH"] = SDL_SCANCODE_NONUSBACKSLASH;
	enumMap["APPLICATION"] = SDL_SCANCODE_APPLICATION;
	enumMap["POWER"] = SDL_SCANCODE_POWER;
	enumMap["KP_EQUALS"] = SDL_SCANCODE_KP_EQUALS;
	enumMap["F13"] = SDL_SCANCODE_F13;
	enumMap["F14"] = SDL_SCANCODE_F14;
	enumMap["F15"] = SDL_SCANCODE_F15;
	enumMap["F16"] = SDL_SCANCODE_F16;
	enumMap["F17"] = SDL_SCANCODE_F17;
	enumMap["F18"] = SDL_SCANCODE_F18;
	enumMap["F19"] = SDL_SCANCODE_F19;
	enumMap["F20"] = SDL_SCANCODE_F20;
	enumMap["F21"] = SDL_SCANCODE_F21;
	enumMap["F22"] = SDL_SCANCODE_F22;
	enumMap["F23"] = SDL_SCANCODE_F23;
	enumMap["F24"] = SDL_SCANCODE_F24;
	enumMap["EXECUTE"] = SDL_SCANCODE_EXECUTE;
	enumMap["HELP"] = SDL_SCANCODE_HELP;
	enumMap["MENU"] = SDL_SCANCODE_MENU;
	enumMap["SELECT"] = SDL_SCANCODE_SELECT;
	enumMap["STOP"] = SDL_SCANCODE_STOP;
	enumMap["AGAIN"] = SDL_SCANCODE_AGAIN;
	enumMap["UNDO"] = SDL_SCANCODE_UNDO;
	enumMap["CUT"] = SDL_SCANCODE_CUT;
	enumMap["COPY"] = SDL_SCANCODE_COPY;
	enumMap["PASTE"] = SDL_SCANCODE_PASTE;
	enumMap["FIND"] = SDL_SCANCODE_FIND;
	enumMap["MUTE"] = SDL_SCANCODE_MUTE;
	enumMap["VOLUMEUP"] = SDL_SCANCODE_VOLUMEUP;
	enumMap["VOLUMEDOWN"] = SDL_SCANCODE_VOLUMEDOWN;
	enumMap["KP_COMMA"] = SDL_SCANCODE_KP_COMMA;
	enumMap["KP_EQUALSAS400"] = SDL_SCANCODE_KP_EQUALSAS400;
	enumMap["INTERNATIONAL1"] = SDL_SCANCODE_INTERNATIONAL1;
	enumMap["INTERNATIONAL2"] = SDL_SCANCODE_INTERNATIONAL2;
	enumMap["INTERNATIONAL3"] = SDL_SCANCODE_INTERNATIONAL3;
	enumMap["INTERNATIONAL4"] = SDL_SCANCODE_INTERNATIONAL4;
	enumMap["INTERNATIONAL5"] = SDL_SCANCODE_INTERNATIONAL5;
	enumMap["INTERNATIONAL6"] = SDL_SCANCODE_INTERNATIONAL6;
	enumMap["INTERNATIONAL7"] = SDL_SCANCODE_INTERNATIONAL7;
	enumMap["INTERNATIONAL8"] = SDL_SCANCODE_INTERNATIONAL8;
	enumMap["INTERNATIONAL9"] = SDL_SCANCODE_INTERNATIONAL9;
	enumMap["LANG1"] = SDL_SCANCODE_LANG1;
	enumMap["LANG2"] = SDL_SCANCODE_LANG2;
	enumMap["LANG3"] = SDL_SCANCODE_LANG3;
	enumMap["LANG4"] = SDL_SCANCODE_LANG4;
	enumMap["LANG5"] = SDL_SCANCODE_LANG5;
	enumMap["LANG6"] = SDL_SCANCODE_LANG6;
	enumMap["LANG7"] = SDL_SCANCODE_LANG7;
	enumMap["LANG8"] = SDL_SCANCODE_LANG8;
	enumMap["LANG9"] = SDL_SCANCODE_LANG9;
	enumMap["ALTERASE"] = SDL_SCANCODE_ALTERASE;
	enumMap["SYSREQ"] = SDL_SCANCODE_SYSREQ;
	enumMap["CANCEL"] = SDL_SCANCODE_CANCEL;
	enumMap["CLEAR"] = SDL_SCANCODE_CLEAR;
	enumMap["PRIOR"] = SDL_SCANCODE_PRIOR;
	enumMap["RETURN2"] = SDL_SCANCODE_RETURN2;
	enumMap["SEPARATOR"] = SDL_SCANCODE_SEPARATOR;
	enumMap["OUT"] = SDL_SCANCODE_OUT;
	enumMap["OPER"] = SDL_SCANCODE_OPER;
	enumMap["CLEARAGAIN"] = SDL_SCANCODE_CLEARAGAIN;
	enumMap["CRSEL"] = SDL_SCANCODE_CRSEL;
	enumMap["EXSEL"] = SDL_SCANCODE_EXSEL;
	enumMap["KP_00"] = SDL_SCANCODE_KP_00;
	enumMap["KP_000"] = SDL_SCANCODE_KP_000;
	enumMap["THOUSANDSSEPARATOR"] = SDL_SCANCODE_THOUSANDSSEPARATOR;
	enumMap["DECIMALSEPARATOR"] = SDL_SCANCODE_DECIMALSEPARATOR;
	enumMap["CURRENCYUNIT"] = SDL_SCANCODE_CURRENCYUNIT;
	enumMap["CURRENCYSUBUNIT"] = SDL_SCANCODE_CURRENCYSUBUNIT;
	enumMap["KP_LEFTPAREN"] = SDL_SCANCODE_KP_LEFTPAREN;
	enumMap["KP_RIGHTPAREN"] = SDL_SCANCODE_KP_RIGHTPAREN;
	enumMap["KP_LEFTBRACE"] = SDL_SCANCODE_KP_LEFTBRACE;
	enumMap["KP_RIGHTBRACE"] = SDL_SCANCODE_KP_RIGHTBRACE;
	enumMap["KP_TAB"] = SDL_SCANCODE_KP_TAB;
	enumMap["KP_BACKSPACE"] = SDL_SCANCODE_KP_BACKSPACE;
	enumMap["KP_A"] = SDL_SCANCODE_KP_A;
	enumMap["KP_B"] = SDL_SCANCODE_KP_B;
	enumMap["KP_C"] = SDL_SCANCODE_KP_C;
	enumMap["KP_D"] = SDL_SCANCODE_KP_D;
	enumMap["KP_E"] = SDL_SCANCODE_KP_E;
	enumMap["KP_F"] = SDL_SCANCODE_KP_F;
	enumMap["KP_XOR"] = SDL_SCANCODE_KP_XOR;
	enumMap["KP_POWER"] = SDL_SCANCODE_KP_POWER;
	enumMap["KP_PERCENT"] = SDL_SCANCODE_KP_PERCENT;
	enumMap["KP_LESS"] = SDL_SCANCODE_KP_LESS;
	enumMap["KP_GREATER"] = SDL_SCANCODE_KP_GREATER;
	enumMap["KP_AMPERSAND"] = SDL_SCANCODE_KP_AMPERSAND;
	enumMap["KP_DBLAMPERSAND"] = SDL_SCANCODE_KP_DBLAMPERSAND;
	enumMap["KP_VERTICALBAR"] = SDL_SCANCODE_KP_VERTICALBAR;
	enumMap["KP_DBLVERTICALBAR"] = SDL_SCANCODE_KP_DBLVERTICALBAR;
	enumMap["KP_COLON"] = SDL_SCANCODE_KP_COLON;
	enumMap["KP_HASH"] = SDL_SCANCODE_KP_HASH;
	enumMap["KP_SPACE"] = SDL_SCANCODE_KP_SPACE;
	enumMap["KP_AT"] = SDL_SCANCODE_KP_AT;
	enumMap["KP_EXCLAM"] = SDL_SCANCODE_KP_EXCLAM;
	enumMap["KP_MEMSTORE"] = SDL_SCANCODE_KP_MEMSTORE;
	enumMap["KP_MEMRECALL"] = SDL_SCANCODE_KP_MEMRECALL;
	enumMap["KP_MEMCLEAR"] = SDL_SCANCODE_KP_MEMCLEAR;
	enumMap["KP_MEMADD"] = SDL_SCANCODE_KP_MEMADD;
	enumMap["KP_MEMSUBTRACT"] = SDL_SCANCODE_KP_MEMSUBTRACT;
	enumMap["KP_MEMMULTIPLY"] = SDL_SCANCODE_KP_MEMMULTIPLY;
	enumMap["KP_MEMDIVIDE"] = SDL_SCANCODE_KP_MEMDIVIDE;
	enumMap["KP_PLUSMINUS"] = SDL_SCANCODE_KP_PLUSMINUS;
	enumMap["KP_CLEAR"] = SDL_SCANCODE_KP_CLEAR;
	enumMap["KP_CLEARENTRY"] = SDL_SCANCODE_KP_CLEARENTRY;
	enumMap["KP_BINARY"] = SDL_SCANCODE_KP_BINARY;
	enumMap["KP_OCTAL"] = SDL_SCANCODE_KP_OCTAL;
	enumMap["KP_DECIMAL"] = SDL_SCANCODE_KP_DECIMAL;
	enumMap["KP_HEXADECIMAL"] = SDL_SCANCODE_KP_HEXADECIMAL;
	enumMap["LCTRL"] = SDL_SCANCODE_LCTRL;
	enumMap["LSHIFT"] = SDL_SCANCODE_LSHIFT;
	enumMap["LALT"] = SDL_SCANCODE_LALT;
	enumMap["LGUI"] = SDL_SCANCODE_LGUI;
	enumMap["RCTRL"] = SDL_SCANCODE_RCTRL;
	enumMap["RSHIFT"] = SDL_SCANCODE_RSHIFT;
	enumMap["RALT"] = SDL_SCANCODE_RALT;
	enumMap["RGUI"] = SDL_SCANCODE_RGUI;
	enumMap["MODE"] = SDL_SCANCODE_MODE;
	enumMap["AUDIONEXT"] = SDL_SCANCODE_AUDIONEXT;
	enumMap["AUDIOPREV"] = SDL_SCANCODE_AUDIOPREV;
	enumMap["AUDIOSTOP"] = SDL_SCANCODE_AUDIOSTOP;
	enumMap["AUDIOPLAY"] = SDL_SCANCODE_AUDIOPLAY;
	enumMap["AUDIOMUTE"] = SDL_SCANCODE_AUDIOMUTE;
	enumMap["MEDIASELECT"] = SDL_SCANCODE_MEDIASELECT;
	enumMap["WWW"] = SDL_SCANCODE_WWW;
	enumMap["MAIL"] = SDL_SCANCODE_MAIL;
	enumMap["CALCULATOR"] = SDL_SCANCODE_CALCULATOR;
	enumMap["COMPUTER"] = SDL_SCANCODE_COMPUTER;
	enumMap["AC_SEARCH"] = SDL_SCANCODE_AC_SEARCH;
	enumMap["AC_HOME"] = SDL_SCANCODE_AC_HOME;
	enumMap["AC_BACK"] = SDL_SCANCODE_AC_BACK;
	enumMap["AC_FORWARD"] = SDL_SCANCODE_AC_FORWARD;
	enumMap["AC_STOP"] = SDL_SCANCODE_AC_STOP;
	enumMap["AC_REFRESH"] = SDL_SCANCODE_AC_REFRESH;
	enumMap["AC_BOOKMARKS"] = SDL_SCANCODE_AC_BOOKMARKS;
	enumMap["BRIGHTNESSDOWN"] = SDL_SCANCODE_BRIGHTNESSDOWN;
	enumMap["BRIGHTNESSUP"] = SDL_SCANCODE_BRIGHTNESSUP;
	enumMap["DISPLAYSWITCH"] = SDL_SCANCODE_DISPLAYSWITCH;
	enumMap["KBDILLUMTOGGLE"] = SDL_SCANCODE_KBDILLUMTOGGLE;
	enumMap["KBDILLUMDOWN"] = SDL_SCANCODE_KBDILLUMDOWN;
	enumMap["KBDILLUMUP"] = SDL_SCANCODE_KBDILLUMUP;
	enumMap["EJECT"] = SDL_SCANCODE_EJECT;
	enumMap["SLEEP"] = SDL_SCANCODE_SLEEP;
}

#endif // __KEYMAP_H_DEFINED__